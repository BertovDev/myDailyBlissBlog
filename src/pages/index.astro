---
import Layout from "../layouts/Layout.astro";
import BlogList from "../components/BlogList.astro";
import Header from "../components/Header.astro";
import HeaderImage from "../components/HeaderImage.astro";
---

<Layout title="Welcome to Astro.">
  <main
    class="text-white min-h-screen h-screen flex flex-row items-start lg:flex-col lg:items-start lg:justify-around"
  >
    <HeaderImage />

    <div
      class="flex flex-col h-full ml-[33%] lg:ml-[17%] xl:ml-[16%] 2xl:ml-[12%] w-full mt-10"
    >
      <div class="text-container flex flex-col h-full">
        <div
          class="hidden lg:block text-6xl sm:text-[7rem] md:text-[8rem] lg:text-[8.5rem] 2xl:text-[10.5rem] mb-4"
        >
          <span class="block relative">
            <span class="absolute left-0 text-primary-150">A COMPILATION</span>
            <span class="relative left-7 z-10">A COMPILATION</span>
          </span>
          <span class="block relative mt-2">
            <span class="absolute left-0 text-primary-150"
              >OF MY DAILY JOYNESS</span
            >
            <span class="relative z-10 left-7">OF MY DAILY JOYNESS</span>
          </span>
        </div>
        <div
          class="xl:w-[80%] 2xl:w-[86%] h-1 relative opacity-70 border-t-2 hidden lg:block"
        >
        </div>
      </div>
      <div
        class="text-container
              text-6xl
              sm:text-8xl
              md:text-9xl
              lg:text-7xl
              lg:hidden"
      >
        <div class="text-left break-words">
          <p class="text text2 inline-block absolute text-primary-150">
            SOME OF<br />MY DAILY<br /><span class="joyness">JOYNESS </span>
            <br />
            SOME OF<br />MY DAILY<br /><span class="joyness">JOYNESS </span>
            <br />
            SOME OF<br />MY DAILY<br /><span class="joyness">JOYNESS </span>
            <br />
            SOME OF<br />MY DAILY<br /><span class="joyness">JOYNESS </span>
            <br />
            SOME OF<br />MY DAILY<br /><span class="joyness">JOYNESS </span>
            <br />
            SOME OF<br />MY DAILY<br /><span class="joyness">JOYNESS </span>
            <br />
            SOME OF<br />MY DAILY<br /><span class="joyness">JOYNESS </span>
            <br />
          </p>
          <p class="text text1 inline-block relative left-3">
            SOME OF<br />MY DAILY<br /><span class="joyness2">JOYNESS </span>
            <br />
            SOME OF<br />MY DAILY<br /><span class="joyness2">JOYNESS </span>
            <br />
            SOME OF<br />MY DAILY<br /><span class="joyness2">JOYNESS </span>
            <br />
            SOME OF<br />MY DAILY<br /><span class="joyness2">JOYNESS </span>
            <br />
            SOME OF<br />MY DAILY<br /><span class="joyness2">JOYNESS </span>
            <br />
            SOME OF<br />MY DAILY<br /><span class="joyness2">JOYNESS </span>
            <br />
            SOME OF<br />MY DAILY<br /><span class="joyness2">JOYNESS </span>
            <br />
          </p>
        </div>
      </div>

      <Header />
    </div>

    <div class="hidden h-full w-full fixed z-30" id="gradient">
      <img src="/thunder.svg" class="fill-white thunder" alt="" />
      <img src="/thunder.svg" class="fill-white thunder2" alt="" />

      <div id="drag-container" class="w-3/4 h-3/4 flex flex-col m-auto">
        <img
          id="drag"
          src="/benji.png"
          alt=""
          class="benji-img absolute left-0 right-0 top-0 bottom-0 m-auto scale-50 opacity-0"
        />
      </div>
      <div
        class="benji-text opacity-0 absolute left-0 right-0 top-20 text-4xl text-center"
      >
        <h1 class="mb-2">
          You invoked <span class="text-primary">BENJI</span>
        </h1>
        <h2>Pet him! or you DIE!</h2>
      </div>
    </div>
  </main>
</Layout>

<style>
  body {
    overflow: hidden;
  }

  .text-container {
    @apply font-roboto font-extrabold uppercase;
  }

  .thunder {
    @apply opacity-0 top-0 left-40 absolute rotate-90;
  }

  .thunder2 {
    @apply absolute right-40 top-32 h-1/2 w-full opacity-0  rotate-45;
  }

  .text {
    -webkit-user-select: none; /* Safari */
    -moz-user-select: none; /* Firefox */
    -ms-user-select: none; /* IE10+/Edge */
    user-select: none; /* Standard */
  }
</style>

<script>
  import isElementInViewport from "../utils/uitls";
  import gsap from "gsap";
  import { Draggable } from "gsap/Draggable";

  gsap.registerPlugin(Draggable);

  const benji_img = document.querySelector(".benji-img");

  const getter = gsap.getProperty(benji_img);

  const JoynessTopElements: NodeListOf<Element> | null =
    document.querySelectorAll(".joyness");
  const JoynessBottomElements: NodeListOf<Element> | null =
    document.querySelectorAll(".joyness2");

  let JoynessElementInViewport: HTMLElement | null = null;
  const tl = gsap.timeline();

  let start: number = Date.now();
  let current = 0;
  let delta = 0;

  const headerImage: HTMLImageElement = document.querySelectorAll("img")[0];
  const header: HTMLElement | null = document.querySelector("header");

  gsap.fromTo(
    ".text1",
    { alpha: 0, duration: 3, delay: 0.8 },
    { alpha: 1, duration: 3, delay: 0.8 }
  );

  gsap.fromTo(
    ".text2",
    { alpha: 0, duration: 3, delay: 1 },
    { alpha: 1, duration: 3, delay: 1 }
  );

  tl.fromTo(
    ".square1",
    { alpha: 0, duration: 0.5 },
    { alpha: 1, duration: 0.5 }
  )
    .fromTo(
      ".square2",
      { alpha: 0, duration: 0.7 },
      { alpha: 1, duration: 0.7 }
    )
    .fromTo(
      ".square3",
      { alpha: 0, duration: 0.7 },
      { alpha: 1, duration: 0.7 }
    );

  for (let i = JoynessTopElements.length - 1; i >= 0; i--) {
    if (isElementInViewport(JoynessTopElements[i])) {
      JoynessElementInViewport = JoynessBottomElements[i] as HTMLElement;
      break;
    }
  }

  const twinkleText = (element: HTMLElement | null) => {
    current = Date.now();
    delta = Math.floor((current - start) / 1000);

    const tlTwinkle = gsap.timeline({
      onComplete: () => twinkleText(element),
    });

    if (delta > 2) {
      tlTwinkle.fromTo(
        element,
        { alpha: 1, duration: 0.4, ease: "power3.inOut" },
        { alpha: 0.5, duration: 0.2, ease: "power3.inOut" }
      );
    }
  };

  Draggable.create("#drag", {
    type: "x,y",
    bounds: "#drag-container",
    onDrag: (e) => {
      gsap.to(".benji-img", {
        scale: "+=0.1",
        onUpdate: () => {
          if ((getter("scale") as number) > 1) {
            tl.to(".benji-img", {
              scale: 0.5,
              duration: 1,
              opacity: 0,
            })
              .to("#gradient", {
                opacity: 0,
                duration: 1,
                ease: "power3.inOut",
                display: "none",
              })
              .to(headerImage, {
                display: "block",
                opacity: 1,
                x: 0,
                duration: 0.5,
              })
              .to(header, { y: 0, duration: 0.5, display: "block" })
              .to(".text-container", {
                display: "block",
              })
              .to(".text-container", { opacity: 1, duration: 0.5 });
          }
        },
      });
    },
  });

  JoynessElementInViewport?.addEventListener("click", () => {
    tl.to(headerImage, {
      opacity: 0,
      x: -100,
      duration: 0.5,
      display: "none",
    })
      .to(header, { y: "+=100", duration: 0.5, display: "none" })
      .to(".text-container", {
        opacity: 0,
        duration: 0.5,
        display: "none",
      })
      .to("#gradient", {
        backgroundImage:
          "linear-gradient(to bottom, black 0%, black 60%, #212121 100%)",
        duration: 1.5,
        display: "flex",
        delay: 0.5,
      })
      .to([".thunder", ".thunder2"], {
        opacity: 1,
        duration: 0.3,
        stagger: 0.8,
      })
      .to([".thunder", ".thunder2"], {
        opacity: 0,
        duration: 0.3,
        stagger: 0.1,
      })
      .to(".benji-img", { opacity: 1, duration: 0.6 })
      .to(".benji-text", { opacity: 1, duration: 0.5 });
  });

  twinkleText(JoynessElementInViewport);
</script>
